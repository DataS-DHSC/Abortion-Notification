name: deply-to-azure

on:
  push:
    branches:
      - main
    paths:
      - 'DHSC.ANS.API.Consumer/**'
      - 'DHSC.ANS.API.Legacy/**'
      - 'DHSC.ANS.Infrastructure/**'
      - 'DHSC.ANS.Service/**'
      - '.github/workflows/*.yml'

jobs:
  terraform:
    runs-on: ubuntu-latest

    outputs:
      web_app_name: ${{ steps.get_app_name.outputs.web_app_name }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Terraform Init
      run: terraform init
      working-directory: BOTGC.Infrastructure
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve
      working-directory: BOTGC.Infrastructure
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        TF_VAR_x_api_key: ${{ secrets.X_API_KEY }}        

    - name: Get Web App Name
      id: get_app_name
      run: |
        web_app_name=$(terraform output -raw web_app_name)
        echo "web_app_name=${web_app_name}"
        echo "web_app_name=${web_app_name}" >> "$GITHUB_OUTPUT"
      working-directory: BOTGC.Infrastructure
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

  deploy-api:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Publish API
      run: |
        dotnet publish DHSC.ANS.API.Consumer/DHSC.ANS.API.Consumer.csproj \
          -c Release \
          -r linux-x64 \
          --self-contained false \
          -o published

    - name: Zip API for Deployment
      run: zip -r api.zip . -x '*.git*'
      working-directory: published

    - name: Install Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

    - name: Azure CLI Login
      run: |
        az login --service-principal \
          -u ${{ secrets.AZURE_CLIENT_ID }} \
          -p ${{ secrets.AZURE_CLIENT_SECRET }} \
          --tenant ${{ secrets.AZURE_TENANT_ID }}

    - name: Deploy to API
      run: |
        az webapp deploy --resource-group rg-dhsc-ans-prd-uks-001 \
          --name ${{ needs.terraform.outputs.web_app_name }} \
          --src-path published/api.zip \
          --type zip
